server:
  port: 8300

spring:
  data:
    mongodb:
      uri: mongodb+srv://admin:${MONGO_DB_PASSWORD}@cluster0.lme5y.mongodb.net/mutual-aid-app?retryWrites=true&w=majority
      # for connection to local DB. In my case for connection to docker mongoDB container:
      # uri: mongodb://${MONGO_USERNAME}:${MONGO_PWD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=admin
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  jackson:
    default-property-inclusion: non_null
    parser:
      allow-comments: true

application:
  api-info:
    version: 2.0
    title: ORDERS
    description: Order SERVICE
    contact:
      name: OLEG
      url: https://mail.google.com
      email: vilchinskioleg@gmail.com

feign:
  client:
    config:
      profileRestClient:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: full
        requestInterceptors:
          - order.orderservice.configuration.client.profile.ProfileRestClientAuthInterceptor
  httpclient:
    enabled: true

datasource:
  api:
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://localhost:5432/apiDB
    username: admintest
    password: postgres12345

scheduler:
  remove-closed-orders-job:
    cron: 0 40 14 * * ?
    closed-order-live-hours: 72
    page-size: 10

kafka:
  bootstrapServers: 127.0.0.1:9093
  # for SSL security:
  ssl-key-password: 34rtsTb290
  ssl-keystore-location:
  ssl-keystore-password: 34rtsTb290
  ssl-truststore-location:
  ssl-truststore-password: 34rtsTb290

profile-rest-client:
  url: http://localhost:8200
  user: order-service-client
  password: 42vovk_wEle!76

auth-rest-client:
  url: http://localhost:8100
  read-timeout: 10000
  connection-timeout: 10000
  user: order-service-client
  password: 42vovk_wEle!76