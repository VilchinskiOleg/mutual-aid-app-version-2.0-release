include:
  # import Kafka internal :
  - ./kafka/docker-compose.yml
  # import Kafka external :
  - ./kafka-avro/docker-compose.yml
services:
  postgres:
    image: postgres
    container_name: 'postgres'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${PG_DB_USERNAME}
      - POSTGRES_PASSWORD=${PG_DB_PASSWORD}
    volumes:
      # 1. To back up the current data state :
      # For Windows:
#      - ${pwd}/postgres/backup:/var/lib/postgresql/data
      # For Linux:
#      - $(pwd)/postgres/backup:/var/lib/postgresql/data
      # For MacOS (only particular dirs, like 'tmp' e.t.c., are allowed):
      - /tmp/mutual-aid-app/postgres/backup:/var/lib/postgresql/data
      # ...
      # 2. To initialize multiple databases before DB starting :
      # For Linux:
#      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      # For MacOS (only particular dirs, like 'tmp' e.t.c., are allowed):
      - /tmp/mutual-aid-app/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  redis:
    image: redis
    container_name: 'redis'
    ports:
      - '6379:6379'
  auth-service:
    build:
      dockerfile: Dockerfile
      context: ./auth-parent/auth-service-rest
    container_name: 'auth-service'
    ports:
      - '8100:8100'
      - '5015:5005'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MONGO_DB_PASSWORD
      - EMAIL_SENDER_API_TOKEN
  profile-service:
    build:
      dockerfile: Dockerfile
      context: ./profile-service-parent/profile-service-rest
    container_name: 'profile-service'
    ports:
      - '8200:8200'
      - '5025:5005'
    depends_on:
      - 'auth-service'
      - 'kafka-external'
      - 'schema-registry'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MONGO_DB_PASSWORD
      - AUTH_SERVICE_HOST=auth-service
      - KAFKA_BROKER_HOST=${EXTERNAL_KAFKA_BROKER_HOST}
      - KAFKA_SCHEMA_REGISTRY_HOST=${EXTERNAL_KAFKA_SCHEMA_REGISTRY_HOST}
#  profile-soap-service:
#    build:
#      dockerfile: Dockerfile
#      context: ./profile-service-parent/profile-service-soap
#    container_name: 'profile-soap-service'
#    ports:
#      - '8250:8250'
#      - '5225:5005'
#    depends_on:
#      - 'auth-service'
#    environment:
#      - MONGO_DB_PASSWORD=wrong_val
#      - auth-rest-client.url=http://auth-service:8100
  order-service:
    build:
      dockerfile: Dockerfile
      context: ./order-service
    container_name: 'order-service'
    ports:
      - '8300:8300'
      - '5035:5005'
    depends_on:
      - 'kafka-internal'
      - 'postgres'
      - 'auth-service'
      - 'profile-service'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MONGO_DB_PASSWORD
      - PG_HOST=${PG_DB_HOST}
      - PG_USERNAME=${PG_DB_USERNAME}
      - PG_PASSWORD=${PG_DB_PASSWORD}
      # It must be internal Port and Name of containers:
      - kafka.bootstrapServers=${INTERNAL_KAFKA_BROKER_HOST}:9092
#      - kafka.ssl-keystore-location=/app/clientkeystore.jks
#      - kafka.ssl-truststore-location=/app/clienttruststore.jks
#      - datasource.api.jdbc-url=jdbc:postgresql://postgres:5432/apiDB
#      - auth-rest-client.url=http://auth-service:8100
#      - profile-rest-client.url=http://profile-service:8200
  event-storage-service:
    build:
      dockerfile: Dockerfile
      context: ./event-storage-service
    container_name: 'event-storage-service'
    ports:
      - '8400:8400'
      - '5045:5005'
    depends_on:
      - 'auth-service'
      - 'order-service'
      - 'kafka-internal'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MONGO_DB_PASSWORD
      - kafka.bootstrapServers=${INTERNAL_KAFKA_BROKER_HOST}:9092
#      - kafka.ssl-keystore-location=/app/clientkeystore.jks
#      - kafka.ssl-truststore-location=/app/clienttruststore.jks
  message-chat-service:
    build:
      dockerfile: Dockerfile
      context: ./message-chat-service
    container_name: 'message-chat-service'
    ports:
      - '8500:8500'
      - '5055:5005'
    depends_on:
      - 'postgres'
      - 'redis'
      - 'auth-service'
      - 'profile-service'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - PG_HOST=${PG_DB_HOST}
      - PG_USERNAME=${PG_DB_USERNAME}
      - PG_PASSWORD=${PG_DB_PASSWORD}
      - TRANSLATE_API_TOKEN
      - profile-rest-client.url=http://profile-service:8200
      - REDIS_HOST=redis
  task-executor-service:
    build:
      dockerfile: Dockerfile
      context: ./task-executor-service
    container_name: 'task-executor-service'
    ports:
      - '8600:8600'
      - '5065:5005'
    depends_on:
      - 'auth-service'
      - 'profile-service'
      - 'kafka-external'
      - 'schema-registry'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MONGO_DB_PASSWORD
      - PROFILE_SERVICE_HOST=profile-service
      - KAFKA_BROKER_HOST=${EXTERNAL_KAFKA_BROKER_HOST}
      - KAFKA_SCHEMA_REGISTRY_HOST=${EXTERNAL_KAFKA_SCHEMA_REGISTRY_HOST}