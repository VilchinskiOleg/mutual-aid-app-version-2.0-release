# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test-and-push:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0.18-browsers
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Set up Docker
      - setup_remote_docker:
          version: 20.10.14
      # Use mvn clean and install as the standard maven build phase
      - run:
          name: Build
          command: mvn -DskipTests -P qa clean install
      # Then run your tests
      - run:
          name: Test
          command: mvn test
      - run:
          name: Push images
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_ID}" --password-stdin
            
            docker build -t alehvilchynski/kafka-ca-ssl -f ./kafka-ssl/Dockerfile.CA.SSL ./kafka-ssl
            docker push alehvilchynski/kafka-ca-ssl
            
            docker build -t alehvilchynski/kafka-ssl-broker1 -f ./kafka-ssl/Dockerfile.Kafka.SSL ./kafka-ssl
            docker push alehvilchynski/kafka-ssl-broker1
            
            docker build -t alehvilchynski/auth-service-boot ./auth-parent/auth-service-rest
            docker push alehvilchynski/auth-service-boot
            
            docker build -t alehvilchynski/profile-service-boot ./profile-service-parent/profile-service-rest
            docker push alehvilchynski/profile-service-boot
            
            docker build -t alehvilchynski/order-service-boot ./order-service
            docker push alehvilchynski/order-service-boot
            
            docker build -t alehvilchynski/event-storage-service-boot ./event-storage-service
            docker push alehvilchynski/event-storage-service-boot
      # Install AWS CLI
#      - run:
#          name: Install AWS CLI
#          command: |
#            sudo apt-get update
#            sudo apt-get -y -qq install awscli
#            sudo apt-get install python3-pip
#            sudo pip3 install --upgrade awscli

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # Name of the workflow:
  mutual-aid-app-deploy:
    # Inside the workflow, you define the jobs you want to run:
    jobs:
      - build-and-test-and-push:
          # Inside the job, you can define the filters like with branches you want to run flow for:
          filters:
            branches:
              only: master